"use strict";
(self["webpackChunkfront"] = self["webpackChunkfront"] || []).push([["bundle"],{

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const socket_io_client_1 = __webpack_require__(/*! socket.io-client */ "./node_modules/socket.io-client/build/cjs/index.js");
const server = (0, socket_io_client_1.io)('/');
let myid;
let nick;
let room;
let chat;
server.on('log', d => myid = d);
const type_con = {
    'stock': '코인',
    'onecard': '원카드',
    'poker': '포커'
};
const log_Div = document.querySelector("div.name");
const start_Btn = document.querySelector("button.start");
const name_Inp = document.querySelector("div.name>input");
const room_Div = document.querySelector("div.room");
let create_Div = document.querySelector("div.create");
const rcbox = document.querySelector('div.rcbox');
const inRoom_Div = document.querySelector('div.inRoom');
const rctitle = document.getElementById('rctitle');
const rctype = document.getElementById('rctype');
const rcplayer = document.getElementById('rcplayer');
const rcpsc = document.getElementById('rcpsc');
const rcps = document.getElementById('rcps');
const rccr = document.querySelector('div.rccr');
const rccc = document.querySelector('div.rccc');
start_Btn.addEventListener('click', login);
name_Inp.addEventListener('keypress', e => e.code === "Enter" ? login() : false);
rcplayer.addEventListener('change', e => {
    rcplayer.value = +(rcplayer.value) > 6 ? '6' : +(rcplayer.value) < 2 ? '2' : rcplayer.value;
});
rcpsc.addEventListener('change', e => {
    rcpsc.checked ? rcps.disabled = false : rcps.disabled = true;
});
function login() {
    if (name_Inp.value.match(/[A-z가-힣0-9ㄱ-ㅎ]/)) {
        log_Div.classList.add('hide');
        room_Div.classList.remove('hide');
        nick = name_Inp.value;
        create_Div.addEventListener('click', e => {
            rcbox.classList.remove('hide');
            rccr.addEventListener('click', e => {
                const r = {
                    title: rctitle.value,
                    type: rctype.value,
                    maxplayer: +(rcplayer.value),
                    pass: rcpsc.checked ? rcps.value : '',
                    players: [{ id: myid, nick }],
                    start: false
                };
                server.emit('createRoom', r);
                rcbox.classList.add('hide');
                room_Div.classList.add('hide');
                inRoom();
            });
            rccc.addEventListener('click', e => rcbox.classList.add('hide'));
        });
        server.emit('loin', '');
    }
    else {
        alert('이름을 다시 입력해주세요');
    }
}
server.on('loadRoom', (d) => {
    for (let i of room_Div.children) {
        i.classList.contains('create') ? false : i.remove();
    }
    d[0].forEach((v, i) => {
        let alt = document.createElement('div');
        let title = document.createElement('div');
        let onwer = document.createElement('div');
        let human = document.createElement('div');
        let type = document.createElement('div');
        let part = document.createElement('button');
        alt.classList.add('alt');
        title.classList.add('title');
        onwer.classList.add('owner');
        human.classList.add('human');
        type.classList.add('type');
        part.classList.add('part');
        title.textContent = v.title;
        onwer.textContent = v.players[0].nick;
        human.textContent = `${v.players.length}/${v.maxplayer}`;
        type.textContent = type_con[v.type];
        part.textContent = '참가';
        alt.append(title, onwer, human, type, part);
        room_Div.append(alt);
        part.addEventListener('click', e => {
            rcbox.classList.add('hide');
            room_Div.classList.add('hide');
            server.emit('joinRoom', { n: i, id: myid, nick });
            server.emit('getR', i);
            inRoom();
        });
    });
});
server.on('getR', (d) => {
    room = d[0];
    chat = d[1];
});
function inRoom() {
    inRoom_Div.classList.remove('hide');
    let chat_form = document.querySelector('.rhal');
    let touchst;
    document.addEventListener('touchstart', e => {
        touchst = e.changedTouches.item(0).clientY;
    });
    document.addEventListener('touchend', e => {
        if ((e.changedTouches.item(0).clientY - touchst) > 150) {
            chat_form.classList.remove('hide');
        }
        else if ((e.changedTouches.item(0).clientY - touchst) < -150) {
            chat_form.classList.add('hide');
        }
    });
    document.addEventListener('keyup', e => {
        (e.code === "ControlLeft") ?
            chat_form.classList.contains('hide') ?
                chat_form.classList.remove('hide') : chat_form.classList.add('hide') : false;
    });
}


/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendors"], () => (__webpack_exec__("./src/index.ts")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,